<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.4" reference="GitHub Importer.WebHome" locale="">
  <web>GitHub Importer</web>
  <name>WebHome</name>
  <language/>
  <defaultLanguage>en</defaultLanguage>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>Main.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title>GitHub Importer</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>false</hidden>
  <content>{{velocity}}&#xd;
#if ($request.import)&#xd;
  ## Set input and output types for filter&#xd;
  #set($input = 'githubimporter+wiki')&#xd;
  #set($output = 'xwiki+instance')&#xd;
  ## Should validate if parent already exists&#xd;
  #set($parentValidationError = false)&#xd;
  ## Set input properties by going through each request parameter value&#xd;
  #set($inputProperties = {})&#xd;
  #foreach($parameterName in $request.parameterNames)&#xd;
    #if ($parameterName.startsWith('githubimporter_properties_descriptor_'))&#xd;
      #set($propertyName = $parameterName.substring(37))&#xd;
      #set($paramValue = $request.get($parameterName))&#xd;
      #if ($propertyName.startsWith('source'))&#xd;
        #if ($paramValue.startsWith('http'))&#xd;
          #set($paramValue = "url:${paramValue}")&#xd;
        #else&#xd;
          #set($propertyName = 'source')&#xd;
          #set($paramValue = "file:${paramValue}")&#xd;
        #end&#xd;
      #end&#xd;
      #if ($propertyName.startsWith('parent'))&#xd;
        #if ($paramValue.endsWith('.WebHome'))&#xd;
          #set ($paramValue = $paramValue.replace('.WebHome', ''))&#xd;
        #end&#xd;
        #set ($parentName = $paramValue.substring($paramValue.lastIndexOf('.') + 1))&#xd;
        #set($spaceQuery = "select count(space.name) from XWikiSpace as space where space.name='$parentName'")&#xd;
        #set ($spaceFound = $services.query.xwql($spaceQuery).execute()[0])&#xd;
        #if ($spaceFound > 0)&#xd;
          #set ($parentValidationError = "$services.localization.render('githubimporter.validation.parent')")&#xd;
        #end&#xd;
      #end&#xd;
      #if ($request.getParameter($parameterName) &amp;&amp; $request.getParameter($parameterName) != '')&#xd;
        #set($void = $inputProperties.put($propertyName, $paramValue))&#xd;
      #end&#xd;
    #end&#xd;
  #end&#xd;
&#xd;
  #if ($parentValidationError)&#xd;
    {{error}}$parentValidationError{{/error}}&#xd;
  #else&#xd;
    ## Set default options for XWiki output instance otherwise outputProperties will be null&#xd;
    #set($outputProperties = {})&#xd;
    ## Set job in filter and start the conversion&#xd;
    #set($job = $services.filter.startConvert($input, $inputProperties, $output, $outputProperties))&#xd;
    #if ($job and $request.method == 'POST')&#xd;
      {{info}}$services.localization.render('githubimporter.job.info'){{/info}}&#xd;
    #end&#xd;
  #end&#xd;
#end&#xd;
{{/velocity}}&#xd;
&#xd;
{{template name="job_macros.vm"/}}&#xd;
&#xd;
{{velocity output="false"}}&#xd;
#set ($discard = $xwiki.jsfx.use('uicomponents/job/job.js', true))&#xd;
{{/velocity}}&#xd;
&#xd;
{{velocity}}&#xd;
## Display job log of conversion&#xd;
#if (!$parentValidationError &amp;&amp; $request.method == 'POST')&#xd;
== Import Information ==&#xd;
{{html}}&#xd;
  &lt;div id="filter_job_status">&#xd;
    #set($job = $services.filter.currentJob)&#xd;
    #if ($job)&#xd;
      #set ($jobStatusURL = $xwiki.getURL('GitHub Importer.Code.FilterStreamJobJSON', 'get', $escapetool.url({&#xd;
        'outputSyntax': 'plain'&#xd;
      })))&#xd;
      &lt;div class="xcontent job-status" data-url="$jobStatusURL">&#xd;
        #set($jobStatus = $job.status)&#xd;
        #set($finished = $jobStatus.state.name() == 'FINISHED')&#xd;
        #if (!$finished)&#xd;
          #displayJobProgressBar($jobStatus)&#xd;
        #else&#xd;
          #if (!$jobStatus.logTail.hasLogLevel('ERROR'))&#xd;
            &lt;div class="box successmessage">&#xd;
              $services.localization.render('githubimporter.job.complete')&#xd;
            &lt;/div>&#xd;
          #else&#xd;
            &lt;div class="box errormessage">&#xd;
              $services.localization.render('githubimporter.job.error')&#xd;
            &lt;/div>&#xd;
          #end&#xd;
        #end&#xd;
        #displayJobStatusLog($jobStatus true)&#xd;
      &lt;/div>&#xd;
    #end&#xd;
  &lt;/div>&#xd;
{{/html}}&#xd;
#end&#xd;
{{/velocity}}&#xd;
&#xd;
{{velocity}}
  {{html clean="false"}}&#xd;
  &lt;form class="xform" method="post">&#xd;
    &lt;fieldset>&#xd;
      &lt;dl>&#xd;
        &lt;dt>&#xd;
          &lt;label for="githubimporter_input_source_type">&#xd;
            $services.localization.render('githubimporter.sourcetype.title')&#xd;
          &lt;/label>&#xd;
          &lt;span class="xHint">$services.localization.render('githubimporter.sourcetype.hint')&lt;/span>&#xd;
        &lt;/dt>&#xd;
        &lt;dd>&#xd;
          &lt;select name="githubimporter_sourcetype" id="githubimporter_sourcetype">&#xd;
            &lt;option value="url" name="githubimporter_sourcetype_url" #if($request.get('githubimporter_sourcetype') == "url")selected #end>&#xd;
              $services.localization.render('githubimporter.sourcetype.url')&#xd;
            &lt;/option>&#xd;
            &lt;option value="file" name="githubimporter_sourcetype_file" #if($request.get('githubimporter_sourcetype') == "file") selected #end>&#xd;
              $services.localization.render('githubimporter.sourcetype.file')&#xd;
            &lt;/option>&#xd;
          &lt;/select>&#xd;
        &lt;/dd>&#xd;
        &lt;dt class="githubimporter_properties_descriptor_source#if($request.import &amp;&amp; $request.get('githubimporter_sourcetype') != "url") hidden#end">&#xd;
          &lt;label for="githubimporter_properties_descriptor_source">&#xd;
            $services.localization.render('githubimporter.source.url.title')&#xd;
            &lt;span class="xRequired">$services.localization.render('githubimporter.validation.required')&lt;/span>&#xd;
          &lt;/label>&#xd;
          &lt;span class="xHint">$services.localization.render('githubimporter.source.url.hint')&lt;/span>&#xd;
        &lt;/dt>&#xd;
        &lt;dd class="githubimporter_properties_descriptor_source#if($request.import &amp;&amp; $request.get('githubimporter_sourcetype') != "url") hidden#end">&#xd;
          &lt;input id="githubimporter_properties_descriptor_source_input" name="githubimporter_properties_descriptor_source" type="text"&#xd;
          #if($request.get('githubimporter_sourcetype') == "url") required #end&#xd;
          value="#if($request.import &amp;&amp; $request.get('githubimporter_properties_descriptor_source'))$request.get('githubimporter_properties_descriptor_source')#end"&#xd;
          pattern="[(http(s)?):\/\/(www\.)?a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&amp;//=]*\.git)" title="Repository URL is invalid."/>&#xd;
        &lt;/dd>&#xd;
        &lt;dt class="githubimporter_properties_descriptor_source_file#if($request.get('githubimporter_sourcetype') != "file") hidden#end">&#xd;
          &lt;label for="githubimporter_properties_descriptor_source_file">&#xd;
            $services.localization.render('githubimporter.source.file.title')&#xd;
            &lt;span class="xRequired">$services.localization.render('githubimporter.validation.required')&lt;/span>&#xd;
          &lt;/label>&#xd;
          &lt;span class="xHint">$services.localization.render('githubimporter.source.file.hint')&lt;/span>&#xd;
        &lt;/dt>&#xd;
        &lt;dd class="githubimporter_properties_descriptor_source_file#if($request.get('githubimporter_sourcetype') != "file") hidden#end">&#xd;
          &lt;input id="githubimporter_properties_descriptor_source_file_input" name="githubimporter_properties_descriptor_source_file" type="text"&#xd;
          #if($request.get('githubimporter_sourcetype') == "file") required #end&#xd;
          value="#if($request.import &amp;&amp; $request.get('githubimporter_properties_descriptor_source_file'))$request.get('githubimporter_properties_descriptor_source_file')#end"&#xd;
          pattern="((^\/.*[a-zA-Z])|(^[a-zA-Z]:))(\\|\/)[\\\S|*\S]?((.*\.zip)|((([^\.]*))))$" title="This path is invalid."/>&#xd;
        &lt;/dd>&#xd;
        &lt;dt>&#xd;
          &lt;label for="githubimporter_properties_descriptor_parent">&#xd;
            $services.localization.render('githubimporter.parent.title')&#xd;
            &lt;span class="xRequired">$services.localization.render('githubimporter.validation.required')&lt;/span>&#xd;
          &lt;/label>&#xd;
          &lt;span class="xHint">$services.localization.render('githubimporter.parent.hint')&lt;/span>&#xd;
        &lt;/dt>&#xd;
        &lt;dd>&#xd;
          &lt;input id="githubimporter_properties_descriptor_parent" name="githubimporter_properties_descriptor_parent" type="text" required&#xd;
          value="#if($request.import)$request.get('githubimporter_properties_descriptor_parent')#end"/>&#xd;
        &lt;/dd>&#xd;
        &lt;dt>&#xd;
          &lt;label for="githubimporter_properties_descriptor_authCode">$services.localization.render('githubimporter.authcode.title')&lt;/label>&#xd;
          &lt;span class="xHint">$services.localization.render('githubimporter.authcode.hint')&lt;/span>&#xd;
        &lt;/dt>&#xd;
        &lt;dd>&#xd;
          &lt;input id="githubimporter_properties_descriptor_authCode" name="githubimporter_properties_descriptor_authCode" type="text"&#xd;
          value="#if($request.import)$request.get('githubimporter_properties_descriptor_authCode')#end"/>&#xd;
        &lt;/dd>&#xd;
        &lt;dt>&#xd;
          &lt;label for="githubimporter_properties_descriptor_username">$services.localization.render('githubimporter.username.title')&lt;/label>&#xd;
          &lt;span class="xHint">$services.localization.render('githubimporter.username.hint')&lt;/span>&#xd;
        &lt;/dt>&#xd;
        &lt;dd>&#xd;
          &lt;input id="githubimporter_properties_descriptor_username" name="githubimporter_properties_descriptor_username" type="text"&#xd;
          value="#if($request.import)$request.get('githubimporter_properties_descriptor_username')#end"/>&#xd;
        &lt;/dd>&#xd;
        &lt;dt>&#xd;
          &lt;label for="githubimporter_properties_descriptor_convertSyntax">$services.localization.render('githubimporter.convertsyntax.title')&lt;/label>&#xd;
          &lt;span class="xHint">$services.localization.render('githubimporter.convertsyntax.hint')&lt;/span>&#xd;
        &lt;/dt>&#xd;
        &lt;dd>&#xd;
          &lt;input id="githubimporter_properties_descriptor_convertSyntax" name="githubimporter_properties_descriptor_convertSyntax" type="checkbox" value="true" &#xd;
          #if(!$request.import) checked#elseif($request.get('githubimporter_properties_descriptor_convertSyntax')) checked#end/>&#xd;
        &lt;/dd>&#xd;
        &lt;dt>&#xd;
          &lt;label for="githubimporter_properties_descriptor_createHierarchy">$services.localization.render('githubimporter.createhierarchy.title')&lt;/label>&#xd;
          &lt;span class="xHint">$services.localization.render('githubimporter.createhierarchy.hint')&lt;/span>&#xd;
        &lt;/dt>&#xd;
        &lt;dd>&#xd;
          &lt;input id="githubimporter_properties_descriptor_createHierarchy" name="githubimporter_properties_descriptor_createHierarchy" type="checkbox" value="true"&#xd;
          #if(!$request.import) checked#elseif($request.get('githubimporter_properties_descriptor_createHierarchy')) checked#end/>&#xd;
        &lt;/dd>&#xd;
      &lt;/dl>&#xd;
      &lt;p>&#xd;
        &lt;span class="buttonwrapper">&#xd;
          &lt;input class="button" type="submit" name="import" value="$services.localization.render('githubimporter.button.import')" />&#xd;
        &lt;/span>&#xd;
      &lt;/p>&#xd;
    &lt;/fieldset>&#xd;
  &lt;/form>&#xd;
  {{/html}}
{{/velocity}}</content>
  <object>
    <name>GitHub Importer.WebHome</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>30f09d24-1888-4ba3-b601-1275691e6788</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>default</cache>
    </property>
    <property>
      <code>require(['jquery'], function ($) {&#xd;
  $('#githubimporter_sourcetype').change(function () {&#xd;
    if ($(this).val() === 'file') {&#xd;
      $('.githubimporter_properties_descriptor_source_file').removeClass('hidden');&#xd;
      $('.githubimporter_properties_descriptor_source').addClass('hidden');&#xd;
      $('#githubimporter_properties_descriptor_source_input').attr('name', '');&#xd;
      $('#githubimporter_properties_descriptor_source_file_input').attr('name', 'githubimporter_properties_descriptor_source_file');&#xd;
      $('#githubimporter_properties_descriptor_source_input').removeAttr('required');&#xd;
      $('#githubimporter_properties_descriptor_source_file_input').prop('required',true);&#xd;
    } else {&#xd;
      $('.githubimporter_properties_descriptor_source').removeClass('hidden');&#xd;
      $('.githubimporter_properties_descriptor_source_file').addClass('hidden');&#xd;
      $('#githubimporter_properties_descriptor_source_file_input').attr('name', '');&#xd;
      $('#githubimporter_properties_descriptor_source_input').attr('name', 'githubimporter_properties_descriptor_source');&#xd;
      $('#githubimporter_properties_descriptor_source_input').prop('required',true);&#xd;
      $('#githubimporter_properties_descriptor_source_file_input').removeAttr('required');&#xd;
    }&#xd;
  });&#xd;
});</code>
    </property>
    <property>
      <name>SourceTypeJS</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>currentPage</use>
    </property>
  </object>
</xwikidoc>
